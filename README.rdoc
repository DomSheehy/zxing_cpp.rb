= ZXing.rb

* http://github.com/smparkes/zxing.rb

== DESCRIPTION:

ZXing.rb is a Ruby inteface to the ZXing barcode library.

== FEATURES:

* Supports ZXing Java under jruby
* Supports ZXing C++ under ruby 1.8 (and maybe 1.9?)

== SUPPORT:

The {bug tracker}[http://github.com/smparkes/zxing.rb/issues]
is available here:

  * http://github.com/smparkes/zxing.rb/issues

== SYNOPSIS:

  require 'zxing'
  result = ZXing.decode "myimage.png"

zxing.rb also comes with a command that decodes images: zxd:

  $ zxd filename.png
  <decoded contents>

zxing.rb provides access to many of the classes of ZXing classes like readers, luminance sources, binarizers, so you can mix and match your own applications much as you would with a native Java or C++ app. See zxd and test/runner.rb for examples.

== REQUIREMENTS:

* ruby 1.8 or 1.9

zxing.rb bundles a version of zxing.

== INSTALL:

* sudo gem install zxing

== DEVELOPMENT:

Developing ZXing requires rake-compiler.

* rake install:deps
* rake test

rake test runs the standard ZXing blackbox tests.

== LICENSE:

(The MIT License)

Copyright (c) 2010:

* {Steven Parkes}[http://github/smparkes]

Permission is hereby granted, free of charge, to any person obtaining
a copy of this software and associated documentation files (the
'Software'), to deal in the Software without restriction, including
without limitation the rights to use, copy, modify, merge, publish,
distribute, sublicense, and/or sell copies of the Software, and to
permit persons to whom the Software is furnished to do so, subject to
the following conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
